@page "/ingredients/create"
@inject IIngredientService IngredientService

<PageTitle>Create Ingredient</PageTitle>

<div class="row">
    <div class="col-md-2"></div>
    <div class="col-md-8">
        <EditForm Model="@ingredient" OnValidSubmit="HandleValidSubmitAsync">
            <DataAnnotationsValidator />
            <div class="container" style="margin-top: 100px">
                <div class="row">
                    <h2 style="text-align:center">Create Ingredient</h2>
                </div>
                <div class="row">
                    <label for="name">Name: </label>
                    <InputText id="name" @bind-Value="@ingredient.Name"></InputText>
                    <ValidationMessage For="@(()=> ingredient.Name)"></ValidationMessage>

                </div>
                <div class="row">
                    <label for="category">Category: </label>
                    <InputText id="category" @bind-Value="@ingredient.Category"></InputText>
                    <ValidationMessage For="@(()=> ingredient.Category)"></ValidationMessage>
                </div>

                <div class="row" style="margin-top:20px">
                    <button type="submit" class="btn btn-primary">Create ingredient</button>
                </div>
            </div>

        </EditForm>
    </div>
    <div class="col-md-2"></div>
</div>

@if (displayMessage)
{
    <div style="text-align:center; margin-top:20px">
        <p style="font-size:25px">The ingredient was created</p>
        <p>Ingredient id: @newIngredient.Id</p>
        <p>Ingredient name: @newIngredient.Name</p>
        <p>Ingredient category: @newIngredient.Category</p>
    </div>
}


@code {
    private CreateOrUpdateIngredientRequestModel ingredient = new();

    private IngredientResponseModel newIngredient = new();

    private bool displayMessage = false;

    public async Task HandleValidSubmitAsync()
    {
        newIngredient = await IngredientService.CreateAsync(ingredient);
        displayMessage = true;
        ingredient = new();

    }
}

